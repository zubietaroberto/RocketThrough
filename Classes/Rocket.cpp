#include "Rocket.hpp"

Rocket::Rocket(void) :	_targetRotation(0),	_dr(0),	_ar(0),	_vr(0),	_rotationSpring(0.2f),	_rotationDamping(0.5f),	_pivot(ccp(-1, -1)),	_rotationOrientation(ROTATE_NONE){	this->reset();}Rocket::~Rocket(void) {}Rocket* Rocket::create() {	Rocket * sprite = new Rocket();	if (sprite && sprite->initWithSpriteFrameName("rocket.png")) {		sprite->autorelease();		sprite->setRadius(sprite->boundingBox().size.height * 0.5f);		return sprite;	}	CC_SAFE_DELETE(sprite);	return NULL;}void Rocket::reset() {	_speed = 50;	_pivot = ccp(-1, 1);	_rotationOrientation = ROTATE_NONE;	this->setRotation(-90);	_targetRotation = -90;	float angle = CC_DEGREES_TO_RADIANS(this->getRotation());	_vector = ccp(_speed * cos(angle), -_speed * sin(angle));}void Rocket::update(float dt) {}void Rocket::select(bool flag) {	if (flag) {		this->setDisplayFrame(SpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName("rocket_on.png"));	}	else {		this->setDisplayFrame(SpriteFrameCache::sharedSpriteFrameCache()->spriteFrameByName("rocket.png"));	}}bool Rocket::collidedWithSides() {	CCSize screenSize = Director::getInstance()->getWinSize();	if (getPosition().x > screenSize.width - _radius) {		setPositionX(screenSize.width - _radius);		_rotationOrientation = ROTATE_NONE;		_vector = ccp(this->getVector().x * -1, this->getVector().y);		this->setRotationFromVector();		return true;	}	if (getPosition().x < _radius) {		setPositionX(_radius);		_rotationOrientation = ROTATE_NONE;		_vector = ccp(this->getVector().x * -1, this->getVector().y);		this->setRotationFromVector();		return true;	}	if (getPosition().y < _radius) {		setPositionY(_radius);		_rotationOrientation = ROTATE_NONE;		_vector = ccp(this->getVector().x, this->getVector().y * -1);		this->setRotationFromVector();		return true;	}	if (getPosition().y > screenSize.height - _radius) {		setPositionY(screenSize.height - _radius);		_rotationOrientation = ROTATE_NONE;		_vector = ccp(this->getVector().x, this->getVector().y * -1);		this->setRotationFromVector();		return true;	}	return false;}